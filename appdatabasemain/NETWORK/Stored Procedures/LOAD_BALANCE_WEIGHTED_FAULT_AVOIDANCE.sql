




CREATE PROCEDURE [NETWORK].[LOAD_BALANCE_WEIGHTED_FAULT_AVOIDANCE] 
	@SITE_ID AS VARCHAR(100),
	@CLIENT_IP AS VARCHAR(20),
	@CLIENT_THREAD_ID AS VARCHAR(100),
	@RESOURCE_SIZE AS INT,
	@HOST_IP AS VARCHAR(100) OUTPUT,
	@RESOURCE_UNIT INT OUTPUT
	-- Created by Shu-Yuan Yang 09/20/2023
AS
BEGIN

	SET @HOST_IP = NULL;


	DECLARE @app_ID VARCHAR(50) = 'CloudSharpSystemsWeb';
	DECLARE @data_control_name VARCHAR(50) = 'LOAD_BALANCING_ALGORITHM';
	DECLARE @algorithm_type VARCHAR(50) = 'WEIGHTED_FAULT_AVOIDANCE';
	
	DECLARE @load_cache_str VARCHAR(50) = 'LOAD_CACHE_';
	DECLARE @max_cache_load INT = 1000;
	DECLARE @gamma FLOAT = 0.0;
	DECLARE @max_capacity INT = 0;
	
	SELECT @gamma = CONTROL_VALUE FROM APPLICATIONS.V_APP_DATA_CONTROL
	WHERE APP_ID = @app_ID AND CONTROL_NAME = @data_control_name AND CONTROL_TYPE = @algorithm_type AND CONTROL_LEVEL = 'LOAD_ERROR_WEIGHT'
	AND IS_APP_ENABLED = 'Y' AND IS_CONTROL_ENABLED = 'Y';

	SELECT @max_capacity = MAX(NET_LOAD_CAPACITY) FROM NETWORK.GET_SERVER_LOAD(@SITE_ID) 
	WHERE [NETWORK].[IS_HOST_RESPONSIVE](SERVER_STATUS, IP_STATUS) = 'Y'; -- Shu-Yuan Yang 11142023 modified to use function to determine responsive status 


	EXEC NETWORK.LOAD_BALANCE_VALIDATE_LOAD_CACHE @SITE_ID, @max_cache_load;

	DECLARE @WEIGHTED_LOAD_MAP AS TABLE(HOST_IP VARCHAR(20), LOAD_VALUE FLOAT, GAMMA FLOAT, MAX_CAPACITY INT, ERROR_RATE FLOAT, WEIGHTED_LOAD_VALUE FLOAT);

	WITH WEBSITE_HOST AS (SELECT * FROM NETWORK.TB_WEBSITE_HOST WHERE SITE_ID = @SITE_ID AND [NETWORK].[IS_HOST_RESPONSIVE]('RUNNING', [STATUS]) = 'Y'), -- Shu-Yuan Yang 11142023 modified to use function to determine responsive status
	HOST_DIST AS (
		SELECT *, HOST_IP = RIGHT(CONTROL_LEVEL, LEN(CONTROL_LEVEL) - LEN(@load_cache_str)) FROM APPLICATIONS.TB_APP_DATA_CONTROL
		WHERE APP_ID = @app_ID AND CONTROL_NAME = @data_control_name AND CONTROL_TYPE = @algorithm_type 
		AND CONTROL_LEVEL IN (
			SELECT @load_cache_str + HOST_IP FROM NETWORK.GET_SERVER_LOAD(@SITE_ID) 
			WHERE [NETWORK].[IS_HOST_RESPONSIVE](SERVER_STATUS, IP_STATUS) = 'Y' -- Shu-Yuan Yang 11142023 modified to use function to determine responsive status 
			AND NET_LOAD_CAPACITY - RESOURCE_LOAD > @RESOURCE_SIZE
		)
	)
	INSERT INTO @WEIGHTED_LOAD_MAP
	SELECT DIST.HOST_IP, CONVERT(FLOAT, CONTROL_VALUE), @gamma, @max_capacity, H.ERROR_RATE, CONVERT(FLOAT, CONTROL_VALUE) + @gamma * @max_capacity * H.ERROR_RATE 
	FROM WEBSITE_HOST H
	INNER JOIN HOST_DIST DIST ON H.HOST_IP = DIST.HOST_IP;
	--ORDER BY CONVERT(FLOAT, CONTROL_VALUE) + @gamma * @max_capacity * H.ERROR_RATE ASC;

	-- Write log:
	-- DECLARE @trace_ID NVARCHAR(50) = CONVERT([nvarchar](50), NEWID());
	INSERT INTO APPLICATIONS.TB_CENTRAL_SYSTEM_LOG
	SELECT 
		FORMAT(GETDATE(), 'yyyyMMddHHmmss') + '_' + CONVERT([nvarchar](50), NEWID()) AS LOG_ID,
		@app_ID AS APP_ID, 
		HOST_IP AS SYSTEM_NAME, 
		ISNULL(@CLIENT_THREAD_ID, CONVERT([nvarchar](50), NEWID())) AS TRACE_ID, 
		'NOTE' AS RECORD_TYPE, 
		'LOAD_BALANCE_WEIGHTED_FAULT_AVOIDANCE_TRACK', 
		'LOAD: ' + CONVERT(VARCHAR(250), LOAD_VALUE) AS RECORD_VALUE1, 
		'GAMMA: ' + CONVERT(VARCHAR(250), GAMMA) AS RECORD_VALUE2, 
		'MAX_CAPACITY: ' + CONVERT(VARCHAR(250), MAX_CAPACITY) AS RECORD_VALUE3, 
		'ERROR_RATE: ' + CONVERT(VARCHAR(250), ERROR_RATE) AS RECORD_VALUE4, 
		'WEIGHTED_LOAD_VALUE: ' + CONVERT(VARCHAR(250), WEIGHTED_LOAD_VALUE) AS RECORD_VALUE5, 
		'' AS RECORD_MESSAGE, 
		'Distribution of weighted loads of active hosts during load balancing.' AS RECORD_NOTE, 
		@app_ID AS EDIT_BY, 
		GETDATE() AS EDIT_TIME 
	FROM @WEIGHTED_LOAD_MAP;


	SELECT TOP 1 @HOST_IP = HOST_IP FROM @WEIGHTED_LOAD_MAP
	ORDER BY WEIGHTED_LOAD_VALUE ASC;

	UPDATE APPLICATIONS.TB_APP_DATA_CONTROL SET CONTROL_VALUE = CONVERT(VARCHAR(250), CONVERT(FLOAT, CONTROL_VALUE) + @RESOURCE_SIZE), IS_ENABLED = 'Y', EDIT_BY = @app_ID, EDIT_DATE = GETDATE()
	WHERE APP_ID = @app_ID AND CONTROL_NAME = @data_control_name AND CONTROL_TYPE = @algorithm_type AND CONTROL_LEVEL = @load_cache_str + @HOST_IP;

	IF @HOST_IP IS NULL SET @RESOURCE_UNIT = -1;
	ELSE				SET @RESOURCE_UNIT = 1;




END;
